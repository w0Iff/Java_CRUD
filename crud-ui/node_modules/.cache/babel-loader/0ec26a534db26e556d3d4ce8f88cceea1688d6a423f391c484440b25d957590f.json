{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MICHEL\\\\crud-ui\\\\src\\\\components\\\\EntityList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EntityList = () => {\n  _s();\n  const [entities, setEntities] = useState([]);\n  const [editingEntityId, setEditingEntityId] = useState(null);\n  const [editedEntityName, setEditedEntityName] = useState('');\n  useEffect(() => {\n    // Fetch entities from backend API when component mounts\n    axios.get('http://localhost:8080/entities').then(response => {\n      setEntities(response.data);\n    }).catch(error => {\n      console.error('Error fetching entities:', error);\n    });\n  }); // Empty dependency array to run effect only once when component mounts\n\n  const handleEdit = (id, name) => {\n    setEditingEntityId(id);\n    setEditedEntityName(name);\n  };\n  const handleSave = async () => {\n    try {\n      // Send PUT request to update entity name on the backend\n      await axios.put(`http://localhost:8080/entities/${editingEntityId}`, {\n        name: editedEntityName\n      });\n      // Refresh entities list after update\n      axios.get('http://localhost:8080/entities').then(response => {\n        setEntities(response.data);\n      }).catch(error => {\n        console.error('Error fetching entities:', error);\n      });\n      console.log('Entity updated successfully');\n      // Reset editing state\n      setEditingEntityId(null);\n      setEditedEntityName('');\n    } catch (error) {\n      console.error('Error updating entity:', error);\n    }\n  };\n  const handleCancelEdit = () => {\n    // Reset editing state\n    setEditingEntityId(null);\n    setEditedEntityName('');\n  };\n  const handleDelete = async id => {\n    try {\n      // Send DELETE request to backend API to delete entity by ID\n      await axios.delete(`http://localhost:8080/entities/${id}`);\n      // Remove the deleted entity from the list\n      setEntities(prevEntities => prevEntities.filter(entity => entity.id !== id));\n      console.log('Entity deleted successfully');\n    } catch (error) {\n      console.error('Error deleting entity:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: entities.map(entity => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: entity.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingEntityId === entity.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedEntityName,\n              onChange: e => setEditedEntityName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this) : entity.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingEntityId === entity.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSave,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCancelEdit,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(entity.id, entity.name),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(entity.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, entity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(EntityList, \"J0/89XC11GZtRBg8E30QdcGKu2k=\");\n_c = EntityList;\nexport default EntityList;\nvar _c;\n$RefreshReg$(_c, \"EntityList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","EntityList","_s","entities","setEntities","editingEntityId","setEditingEntityId","editedEntityName","setEditedEntityName","get","then","response","data","catch","error","console","handleEdit","id","name","handleSave","put","log","handleCancelEdit","handleDelete","delete","prevEntities","filter","entity","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MICHEL/crud-ui/src/components/EntityList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst EntityList = () => {\r\n  const [entities, setEntities] = useState([]);\r\n  const [editingEntityId, setEditingEntityId] = useState(null);\r\n  const [editedEntityName, setEditedEntityName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch entities from backend API when component mounts\r\n    axios.get('http://localhost:8080/entities')\r\n      .then(response => {\r\n        setEntities(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching entities:', error);\r\n      });\r\n  }); // Empty dependency array to run effect only once when component mounts\r\n\r\n  const handleEdit = (id, name) => {\r\n    setEditingEntityId(id);\r\n    setEditedEntityName(name);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      // Send PUT request to update entity name on the backend\r\n      await axios.put(`http://localhost:8080/entities/${editingEntityId}`, {\r\n        name: editedEntityName\r\n      });\r\n      // Refresh entities list after update\r\n      axios.get('http://localhost:8080/entities')\r\n        .then(response => {\r\n          setEntities(response.data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching entities:', error);\r\n        });\r\n      console.log('Entity updated successfully');\r\n      // Reset editing state\r\n      setEditingEntityId(null);\r\n      setEditedEntityName('');\r\n    } catch (error) {\r\n      console.error('Error updating entity:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    // Reset editing state\r\n    setEditingEntityId(null);\r\n    setEditedEntityName('');\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Send DELETE request to backend API to delete entity by ID\r\n      await axios.delete(`http://localhost:8080/entities/${id}`);\r\n      // Remove the deleted entity from the list\r\n      setEntities(prevEntities => prevEntities.filter(entity => entity.id !== id));\r\n      console.log('Entity deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting entity:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Entities</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Actions</th> {/* Add a column for actions */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {entities.map(entity => (\r\n            <tr key={entity.id}>\r\n              <td>{entity.id}</td>\r\n              <td>\r\n                {editingEntityId === entity.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editedEntityName}\r\n                    onChange={e => setEditedEntityName(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  entity.name\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingEntityId === entity.id ? (\r\n                  <>\r\n                    <button onClick={handleSave}>Save</button>\r\n                    <button onClick={handleCancelEdit}>Cancel</button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <button onClick={() => handleEdit(entity.id, entity.name)}>Edit</button> {/* Edit button */}\r\n                    <button onClick={() => handleDelete(entity.id)}>Delete</button> {/* Delete button */}\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntityList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}